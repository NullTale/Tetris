#pragma warning disable 219
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ludiq.Generated.Aot
{
	
	
	// AIAgent.op_Equality
	// AIAgent.op_Implicit
	// AIAgent.op_Inequality
	// ApplyForce.op_Equality
	// ApplyForce.op_Implicit
	// ApplyForce.op_Inequality
	// Assets.Scripts.SpriteOrderer.op_Equality
	// Assets.Scripts.SpriteOrderer.op_Implicit
	// Assets.Scripts.SpriteOrderer.op_Inequality
	// BlockProvider.op_Equality
	// BlockProvider.op_Implicit
	// BlockProvider.op_Inequality
	// BlockVisualizer.op_Equality
	// BlockVisualizer.op_Implicit
	// BlockVisualizer.op_Inequality
	// BoardVisualizer.EnableGUI
	// BoardVisualizer.FixedPLayfield
	// BoardVisualizer.op_Equality
	// BoardVisualizer.op_Implicit
	// BoardVisualizer.op_Inequality
	// Bolt.AnimatorMessageListener.op_Equality
	// Bolt.AnimatorMessageListener.op_Implicit
	// Bolt.AnimatorMessageListener.op_Inequality
	// Bolt.FlowMachine.op_Equality
	// Bolt.FlowMachine.op_Implicit
	// Bolt.FlowMachine.op_Inequality
	// Bolt.FlowMacro.op_Equality
	// Bolt.FlowMacro.op_Implicit
	// Bolt.FlowMacro.op_Inequality
	// Bolt.StateMachine.op_Equality
	// Bolt.StateMachine.op_Implicit
	// Bolt.StateMachine.op_Inequality
	// Bolt.StateMacro.op_Equality
	// Bolt.StateMacro.op_Implicit
	// Bolt.StateMacro.op_Inequality
	// CameraMimic.op_Equality
	// CameraMimic.op_Implicit
	// CameraMimic.op_Inequality
	// CollapseEffectModule.op_Equality
	// CollapseEffectModule.op_Implicit
	// CollapseEffectModule.op_Inequality
	// ColorizeEffectModule.op_Equality
	// ColorizeEffectModule.op_Implicit
	// ColorizeEffectModule.op_Inequality
	// Core.AnimationCurveAsset.op_Equality
	// Core.AnimationCurveAsset.op_Implicit
	// Core.AnimationCurveAsset.op_Inequality
	// Core.AudioDatabase.op_Equality
	// Core.AudioDatabase.op_Implicit
	// Core.AudioDatabase.op_Inequality
	// Core.AudioDatabaseEx.op_Equality
	// Core.AudioDatabaseEx.op_Implicit
	// Core.AudioDatabaseEx.op_Inequality
	// Core.AudioMixerPlayableAsset.op_Equality
	// Core.AudioMixerPlayableAsset.op_Implicit
	// Core.AudioMixerPlayableAsset.op_Inequality
	// Core.AudioMixerTrackAsset.op_Equality
	// Core.AudioMixerTrackAsset.op_Implicit
	// Core.AudioMixerTrackAsset.op_Inequality
	// Core.CallbackBase.op_Equality
	// Core.CallbackBase.op_Implicit
	// Core.CallbackBase.op_Inequality
	// Core.CommandSystem.CommandInterpreter.op_Equality
	// Core.CommandSystem.CommandInterpreter.op_Implicit
	// Core.CommandSystem.CommandInterpreter.op_Inequality
	// Core.CommandSystem.CommandSequencer.op_Equality
	// Core.CommandSystem.CommandSequencer.op_Implicit
	// Core.CommandSystem.CommandSequencer.op_Inequality
	// Core.Core.op_Equality
	// Core.Core.op_Implicit
	// Core.Core.op_Inequality
	// Core.Downloader.op_Equality
	// Core.Downloader.op_Implicit
	// Core.Downloader.op_Inequality
	// Core.Effect.ActionModule.op_Equality
	// Core.Effect.ActionModule.op_Implicit
	// Core.Effect.ActionModule.op_Inequality
	// Core.Effect.Effect.op_Equality
	// Core.Effect.Effect.op_Implicit
	// Core.Effect.Effect.op_Inequality
	// Core.Effect.RotationDeviationModule.op_Equality
	// Core.Effect.RotationDeviationModule.op_Implicit
	// Core.Effect.RotationDeviationModule.op_Inequality
	// Core.Effect.SpawnModule.op_Equality
	// Core.Effect.SpawnModule.op_Implicit
	// Core.Effect.SpawnModule.op_Inequality
	// Core.EventSystem.MessageEmitter.op_Equality
	// Core.EventSystem.MessageEmitter.op_Implicit
	// Core.EventSystem.MessageEmitter.op_Inequality
	// Core.EventSystem.MessageEmitter.Send
	// Core.EventSystem.MessageSystemDefault.op_Equality
	// Core.EventSystem.MessageSystemDefault.op_Implicit
	// Core.EventSystem.MessageSystemDefault.op_Inequality
	// Core.GameObjectReference.op_Equality
	// Core.GameObjectReference.op_Implicit
	// Core.GameObjectReference.op_Inequality
	// Core.HierarchyRecorder.op_Equality
	// Core.HierarchyRecorder.op_Implicit
	// Core.HierarchyRecorder.op_Inequality
	// Core.LocalizationSync.op_Equality
	// Core.LocalizationSync.op_Implicit
	// Core.LocalizationSync.op_Inequality
	// Core.LocalizedDropdown.op_Equality
	// Core.LocalizedDropdown.op_Implicit
	// Core.LocalizedDropdown.op_Inequality
	// Core.LocalizedText.op_Equality
	// Core.LocalizedText.op_Implicit
	// Core.LocalizedText.op_Inequality
	// Core.MinMaxCurveAsset.op_Equality
	// Core.MinMaxCurveAsset.op_Implicit
	// Core.MinMaxCurveAsset.op_Inequality
	// Core.Module.DebugControl.op_Equality
	// Core.Module.DebugControl.op_Implicit
	// Core.Module.DebugControl.op_Inequality
	// Core.Module.FPSCounter.op_Equality
	// Core.Module.FPSCounter.op_Implicit
	// Core.Module.FPSCounter.op_Inequality
	// Core.Module.KeepAspect.op_Equality
	// Core.Module.KeepAspect.op_Implicit
	// Core.Module.KeepAspect.op_Inequality
	// Core.Module.Localization.op_Equality
	// Core.Module.Localization.op_Implicit
	// Core.Module.Localization.op_Inequality
	// Core.Module.MessageSystemDefault.op_Equality
	// Core.Module.MessageSystemDefault.op_Implicit
	// Core.Module.MessageSystemDefault.op_Inequality
	// Core.Module.MousePosition.op_Equality
	// Core.Module.MousePosition.op_Implicit
	// Core.Module.MousePosition.op_Implicit
	// Core.Module.MousePosition.op_Inequality
	// Core.Module.Serialization.op_Equality
	// Core.Module.Serialization.op_Implicit
	// Core.Module.Serialization.op_Inequality
	// Core.Module.TaskManager.op_Equality
	// Core.Module.TaskManager.op_Implicit
	// Core.Module.TaskManager.op_Inequality
	// Core.Module.TimeControl.op_Equality
	// Core.Module.TimeControl.op_Implicit
	// Core.Module.TimeControl.op_Inequality
	// Core.Module.TimeController.op_Equality
	// Core.Module.TimeController.op_Implicit
	// Core.Module.TimeController.op_Inequality
	// Core.MotionScaler.op_Equality
	// Core.MotionScaler.op_Implicit
	// Core.MotionScaler.op_Inequality
	// Core.NameGenerator.op_Equality
	// Core.NameGenerator.op_Implicit
	// Core.NameGenerator.op_Inequality
	// Core.NodeLogic.ActivationNode.op_Equality
	// Core.NodeLogic.ActivationNode.op_Implicit
	// Core.NodeLogic.ActivationNode.op_Inequality
	// Core.NodeLogic.ComparisonNode.op_Equality
	// Core.NodeLogic.ComparisonNode.op_Implicit
	// Core.NodeLogic.ComparisonNode.op_Inequality
	// Core.NodeLogic.DelayNode.op_Equality
	// Core.NodeLogic.DelayNode.op_Implicit
	// Core.NodeLogic.DelayNode.op_Inequality
	// Core.NodeLogic.FinishNode.op_Equality
	// Core.NodeLogic.FinishNode.op_Implicit
	// Core.NodeLogic.FinishNode.op_Inequality
	// Core.NodeLogic.LogNode.op_Equality
	// Core.NodeLogic.LogNode.op_Implicit
	// Core.NodeLogic.LogNode.op_Inequality
	// Core.NodeLogic.SequenceNode.op_Equality
	// Core.NodeLogic.SequenceNode.op_Implicit
	// Core.NodeLogic.SequenceNode.op_Inequality
	// Core.NodeLogic.StartNode.op_Equality
	// Core.NodeLogic.StartNode.op_Implicit
	// Core.NodeLogic.StartNode.op_Inequality
	// Core.ObjectDestroyer.op_Equality
	// Core.ObjectDestroyer.op_Implicit
	// Core.ObjectDestroyer.op_Inequality
	// Core.ObjectSpawner.op_Equality
	// Core.ObjectSpawner.op_Implicit
	// Core.ObjectSpawner.op_Inequality
	// Core.OnDestroyCallback.op_Equality
	// Core.OnDestroyCallback.op_Implicit
	// Core.OnDestroyCallback.op_Inequality
	// Core.OnGuiCallback.op_Equality
	// Core.OnGuiCallback.op_Implicit
	// Core.OnGuiCallback.op_Inequality
	// Core.OnStartCallback.op_Equality
	// Core.OnStartCallback.op_Implicit
	// Core.OnStartCallback.op_Inequality
	// Core.OnUpdateCallback.op_Equality
	// Core.OnUpdateCallback.op_Implicit
	// Core.OnUpdateCallback.op_Inequality
	// Core.OrientedSprite.op_Equality
	// Core.OrientedSprite.op_Implicit
	// Core.OrientedSprite.op_Inequality
	// Core.PhysicsAffector.op_Equality
	// Core.PhysicsAffector.op_Implicit
	// Core.PhysicsAffector.op_Inequality
	// Core.RelativeJointRotationFix.op_Equality
	// Core.RelativeJointRotationFix.op_Implicit
	// Core.RelativeJointRotationFix.op_Inequality
	// Core.ResourcePathComponent.op_Equality
	// Core.ResourcePathComponent.op_Implicit
	// Core.ResourcePathComponent.op_Inequality
	// Core.RollCombination.op_Equality
	// Core.RollCombination.op_Implicit
	// Core.RollCombination.op_Inequality
	// Core.SerializableObject.op_Equality
	// Core.SerializableObject.op_Implicit
	// Core.SerializableObject.op_Inequality
	// Core.SerializatorTransform.op_Equality
	// Core.SerializatorTransform.op_Implicit
	// Core.SerializatorTransform.op_Inequality
	// Core.SerializatorUniversal.op_Equality
	// Core.SerializatorUniversal.op_Implicit
	// Core.SerializatorUniversal.op_Inequality
	// Core.SetCoreMainCamera.op_Equality
	// Core.SetCoreMainCamera.op_Implicit
	// Core.SetCoreMainCamera.op_Inequality
	// Core.SimpleSpriteAnimation.op_Equality
	// Core.SimpleSpriteAnimation.op_Implicit
	// Core.SimpleSpriteAnimation.op_Inequality
	// Core.SoundManager.op_Equality
	// Core.SoundManager.op_Implicit
	// Core.SoundManager.op_Inequality
	// Core.SoundPlayer.op_Equality
	// Core.SoundPlayer.op_Implicit
	// Core.SoundPlayer.op_Inequality
	// Core.SpriteRendererPositionOrder.op_Equality
	// Core.SpriteRendererPositionOrder.op_Implicit
	// Core.SpriteRendererPositionOrder.op_Inequality
	// Core.TimerComponent.op_Equality
	// Core.TimerComponent.op_Implicit
	// Core.TimerComponent.op_Inequality
	// Core.TweenTest.op_Equality
	// Core.TweenTest.op_Implicit
	// Core.TweenTest.op_Inequality
	// Core.UILinkActivator.op_Equality
	// Core.UILinkActivator.op_Implicit
	// Core.UILinkActivator.op_Inequality
	// Core.UITextSizer.op_Equality
	// Core.UITextSizer.op_Implicit
	// Core.UITextSizer.op_Inequality
	// Core.UITinyTooltip.op_Equality
	// Core.UITinyTooltip.op_Implicit
	// Core.UITinyTooltip.op_Inequality
	// Core.UITinyTooltipContent.op_Equality
	// Core.UITinyTooltipContent.op_Implicit
	// Core.UITinyTooltipContent.op_Inequality
	// Core.UITMPLinkTooltip.op_Equality
	// Core.UITMPLinkTooltip.op_Implicit
	// Core.UITMPLinkTooltip.op_Inequality
	// Core.UITMPLinkTooltipAgentClick.op_Equality
	// Core.UITMPLinkTooltipAgentClick.op_Implicit
	// Core.UITMPLinkTooltipAgentClick.op_Inequality
	// Core.UITMPLinkTooltipAgentHover.op_Equality
	// Core.UITMPLinkTooltipAgentHover.op_Implicit
	// Core.UITMPLinkTooltipAgentHover.op_Inequality
	// Core.UITMPLinkTooltipDictionary.op_Equality
	// Core.UITMPLinkTooltipDictionary.op_Implicit
	// Core.UITMPLinkTooltipDictionary.op_Inequality
	// Core.UITooltip.op_Equality
	// Core.UITooltip.op_Implicit
	// Core.UITooltip.op_Inequality
	// Core.UIURLLinkOpener.op_Equality
	// Core.UIURLLinkOpener.op_Implicit
	// Core.UIURLLinkOpener.op_Inequality
	// Core.UniqueIDComponent.op_Equality
	// Core.UniqueIDComponent.op_Implicit
	// Core.UniqueIDComponent.op_Inequality
	// CowEffect.op_Equality
	// CowEffect.op_Implicit
	// CowEffect.op_Inequality
	// DontDestroyOnLoad.op_Equality
	// DontDestroyOnLoad.op_Implicit
	// DontDestroyOnLoad.op_Inequality
	// float.op_Equality
	// float.op_GreaterThan
	// float.op_GreaterThanOrEqual
	// float.op_Inequality
	// float.op_LessThan
	// float.op_LessThanOrEqual
	// ImpulseEffectModule.op_Equality
	// ImpulseEffectModule.op_Implicit
	// ImpulseEffectModule.op_Inequality
	// JoystickListener.JoystickConnected
	// JoystickListener.op_Equality
	// JoystickListener.op_Implicit
	// JoystickListener.op_Inequality
	// LevelCounter.op_Equality
	// LevelCounter.op_Implicit
	// LevelCounter.op_Inequality
	// LevelData.op_Equality
	// LevelData.op_Implicit
	// LevelData.op_Inequality
	// LevelProgressVisualizer.op_Equality
	// LevelProgressVisualizer.op_Implicit
	// LevelProgressVisualizer.op_Inequality
	// LevelVisualizer.op_Equality
	// LevelVisualizer.op_Implicit
	// LevelVisualizer.op_Inequality
	// NextShapeVisualizer.op_Equality
	// NextShapeVisualizer.op_Implicit
	// NextShapeVisualizer.op_Inequality
	// PlayerController.op_Equality
	// PlayerController.op_Implicit
	// PlayerController.op_Inequality
	// PlayerPrefValue.op_Equality
	// PlayerPrefValue.op_Implicit
	// PlayerPrefValue.op_Inequality
	// PostPrecessControl.op_Equality
	// PostPrecessControl.op_Implicit
	// PostPrecessControl.op_Inequality
	// ScoresCounter.op_Equality
	// ScoresCounter.op_Implicit
	// ScoresCounter.op_Inequality
	// ScoreVisualizer.op_Equality
	// ScoreVisualizer.op_Implicit
	// ScoreVisualizer.op_Inequality
	// ShapePositionVisualizer.op_Equality
	// ShapePositionVisualizer.op_Implicit
	// ShapePositionVisualizer.op_Inequality
	// ShapeRouteEffectModule.op_Equality
	// ShapeRouteEffectModule.op_Implicit
	// ShapeRouteEffectModule.op_Inequality
	// ShapeVisualizer.op_Equality
	// ShapeVisualizer.op_Implicit
	// ShapeVisualizer.op_Inequality
	// SpriteRendererColorLerp.op_Equality
	// SpriteRendererColorLerp.op_Implicit
	// SpriteRendererColorLerp.op_Inequality
	// string.op_Equality
	// string.op_Inequality
	// TetrisManager.AI
	// TetrisManager.ClearBoard
	// TetrisManager.op_Equality
	// TetrisManager.op_Implicit
	// TetrisManager.op_Inequality
	// TetrisManager.Pause
	// TetrisManager.PlayerControl
	// TetrisManager.SoftDropTimeScale
	// TMPro.TextContainer.op_Equality
	// TMPro.TextContainer.op_Implicit
	// TMPro.TextContainer.op_Inequality
	// TMPro.TextMeshPro.op_Equality
	// TMPro.TextMeshPro.op_Implicit
	// TMPro.TextMeshPro.op_Inequality
	// TMPro.TextMeshProUGUI.op_Equality
	// TMPro.TextMeshProUGUI.op_Implicit
	// TMPro.TextMeshProUGUI.op_Inequality
	// TMPro.TMP_ColorGradient.op_Equality
	// TMPro.TMP_ColorGradient.op_Implicit
	// TMPro.TMP_ColorGradient.op_Inequality
	// TMPro.TMP_Dropdown.op_Equality
	// TMPro.TMP_Dropdown.op_Implicit
	// TMPro.TMP_Dropdown.op_Inequality
	// TMPro.TMP_Dropdown.SetValueWithoutNotify
	// TMPro.TMP_Dropdown.value
	// TMPro.TMP_FontAsset.op_Equality
	// TMPro.TMP_FontAsset.op_Implicit
	// TMPro.TMP_FontAsset.op_Inequality
	// TMPro.TMP_InputField.op_Equality
	// TMPro.TMP_InputField.op_Implicit
	// TMPro.TMP_InputField.op_Inequality
	// TMPro.TMP_PackageResourceImporterWindow.op_Equality
	// TMPro.TMP_PackageResourceImporterWindow.op_Implicit
	// TMPro.TMP_PackageResourceImporterWindow.op_Inequality
	// TMPro.TMP_ScrollbarEventHandler.op_Equality
	// TMPro.TMP_ScrollbarEventHandler.op_Implicit
	// TMPro.TMP_ScrollbarEventHandler.op_Inequality
	// TMPro.TMP_SelectionCaret.op_Equality
	// TMPro.TMP_SelectionCaret.op_Implicit
	// TMPro.TMP_SelectionCaret.op_Inequality
	// TMPro.TMP_Settings.op_Equality
	// TMPro.TMP_Settings.op_Implicit
	// TMPro.TMP_Settings.op_Inequality
	// TMPro.TMP_SpriteAnimator.op_Equality
	// TMPro.TMP_SpriteAnimator.op_Implicit
	// TMPro.TMP_SpriteAnimator.op_Inequality
	// TMPro.TMP_SpriteAsset.op_Equality
	// TMPro.TMP_SpriteAsset.op_Implicit
	// TMPro.TMP_SpriteAsset.op_Inequality
	// TMPro.TMP_StyleSheet.op_Equality
	// TMPro.TMP_StyleSheet.op_Implicit
	// TMPro.TMP_StyleSheet.op_Inequality
	// TMPro.TMP_SubMesh.op_Equality
	// TMPro.TMP_SubMesh.op_Implicit
	// TMPro.TMP_SubMesh.op_Inequality
	// TMPro.TMP_SubMeshUI.op_Equality
	// TMPro.TMP_SubMeshUI.op_Implicit
	// TMPro.TMP_SubMeshUI.op_Inequality
	// UnityEngine.Animation.op_Equality
	// UnityEngine.Animation.op_Implicit
	// UnityEngine.Animation.op_Inequality
	// UnityEngine.AnimationClip.op_Equality
	// UnityEngine.AnimationClip.op_Implicit
	// UnityEngine.AnimationClip.op_Inequality
	// UnityEngine.Animations.AimConstraint.op_Equality
	// UnityEngine.Animations.AimConstraint.op_Implicit
	// UnityEngine.Animations.AimConstraint.op_Inequality
	// UnityEngine.Animations.LookAtConstraint.op_Equality
	// UnityEngine.Animations.LookAtConstraint.op_Implicit
	// UnityEngine.Animations.LookAtConstraint.op_Inequality
	// UnityEngine.Animations.ParentConstraint.op_Equality
	// UnityEngine.Animations.ParentConstraint.op_Implicit
	// UnityEngine.Animations.ParentConstraint.op_Inequality
	// UnityEngine.Animations.PositionConstraint.op_Equality
	// UnityEngine.Animations.PositionConstraint.op_Implicit
	// UnityEngine.Animations.PositionConstraint.op_Inequality
	// UnityEngine.Animations.RotationConstraint.op_Equality
	// UnityEngine.Animations.RotationConstraint.op_Implicit
	// UnityEngine.Animations.RotationConstraint.op_Inequality
	// UnityEngine.Animations.ScaleConstraint.op_Equality
	// UnityEngine.Animations.ScaleConstraint.op_Implicit
	// UnityEngine.Animations.ScaleConstraint.op_Inequality
	// UnityEngine.Animator.GetBool
	// UnityEngine.Animator.op_Equality
	// UnityEngine.Animator.op_Implicit
	// UnityEngine.Animator.op_Inequality
	// UnityEngine.Animator.SetBool
	// UnityEngine.AnimatorOverrideController.op_Equality
	// UnityEngine.AnimatorOverrideController.op_Implicit
	// UnityEngine.AnimatorOverrideController.op_Inequality
	// UnityEngine.Audio.AudioMixer.op_Equality
	// UnityEngine.Audio.AudioMixer.op_Implicit
	// UnityEngine.Audio.AudioMixer.op_Inequality
	// UnityEngine.Audio.AudioMixer.SetFloat
	// UnityEngine.Audio.AudioMixerGroup.op_Equality
	// UnityEngine.Audio.AudioMixerGroup.op_Implicit
	// UnityEngine.Audio.AudioMixerGroup.op_Inequality
	// UnityEngine.Audio.AudioMixerSnapshot.op_Equality
	// UnityEngine.Audio.AudioMixerSnapshot.op_Implicit
	// UnityEngine.Audio.AudioMixerSnapshot.op_Inequality
	// UnityEngine.AudioBehaviour.op_Equality
	// UnityEngine.AudioBehaviour.op_Implicit
	// UnityEngine.AudioBehaviour.op_Inequality
	// UnityEngine.AudioChorusFilter.op_Equality
	// UnityEngine.AudioChorusFilter.op_Implicit
	// UnityEngine.AudioChorusFilter.op_Inequality
	// UnityEngine.AudioClip.op_Equality
	// UnityEngine.AudioClip.op_Implicit
	// UnityEngine.AudioClip.op_Inequality
	// UnityEngine.AudioDistortionFilter.op_Equality
	// UnityEngine.AudioDistortionFilter.op_Implicit
	// UnityEngine.AudioDistortionFilter.op_Inequality
	// UnityEngine.AudioEchoFilter.op_Equality
	// UnityEngine.AudioEchoFilter.op_Implicit
	// UnityEngine.AudioEchoFilter.op_Inequality
	// UnityEngine.AudioHighPassFilter.op_Equality
	// UnityEngine.AudioHighPassFilter.op_Implicit
	// UnityEngine.AudioHighPassFilter.op_Inequality
	// UnityEngine.AudioListener.op_Equality
	// UnityEngine.AudioListener.op_Implicit
	// UnityEngine.AudioListener.op_Inequality
	// UnityEngine.AudioLowPassFilter.op_Equality
	// UnityEngine.AudioLowPassFilter.op_Implicit
	// UnityEngine.AudioLowPassFilter.op_Inequality
	// UnityEngine.AudioReverbFilter.op_Equality
	// UnityEngine.AudioReverbFilter.op_Implicit
	// UnityEngine.AudioReverbFilter.op_Inequality
	// UnityEngine.AudioReverbZone.op_Equality
	// UnityEngine.AudioReverbZone.op_Implicit
	// UnityEngine.AudioReverbZone.op_Inequality
	// UnityEngine.AudioSource.op_Equality
	// UnityEngine.AudioSource.op_Implicit
	// UnityEngine.AudioSource.op_Inequality
	// UnityEngine.Avatar.op_Equality
	// UnityEngine.Avatar.op_Implicit
	// UnityEngine.Avatar.op_Inequality
	// UnityEngine.AvatarMask.op_Equality
	// UnityEngine.AvatarMask.op_Implicit
	// UnityEngine.AvatarMask.op_Inequality
	// UnityEngine.Behaviour.op_Equality
	// UnityEngine.Behaviour.op_Implicit
	// UnityEngine.Behaviour.op_Inequality
	// UnityEngine.BillboardAsset.op_Equality
	// UnityEngine.BillboardAsset.op_Implicit
	// UnityEngine.BillboardAsset.op_Inequality
	// UnityEngine.BillboardRenderer.op_Equality
	// UnityEngine.BillboardRenderer.op_Implicit
	// UnityEngine.BillboardRenderer.op_Inequality
	// UnityEngine.Bounds.op_Equality
	// UnityEngine.Bounds.op_Inequality
	// UnityEngine.Camera.op_Equality
	// UnityEngine.Camera.op_Implicit
	// UnityEngine.Camera.op_Inequality
	// UnityEngine.Color.op_Addition
	// UnityEngine.Color.op_Division
	// UnityEngine.Color.op_Equality
	// UnityEngine.Color.op_Implicit
	// UnityEngine.Color.op_Implicit
	// UnityEngine.Color.op_Inequality
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Multiply
	// UnityEngine.Color.op_Subtraction
	// UnityEngine.Component.op_Equality
	// UnityEngine.Component.op_Implicit
	// UnityEngine.Component.op_Inequality
	// UnityEngine.ComputeShader.op_Equality
	// UnityEngine.ComputeShader.op_Implicit
	// UnityEngine.ComputeShader.op_Inequality
	// UnityEngine.Cubemap.op_Equality
	// UnityEngine.Cubemap.op_Implicit
	// UnityEngine.Cubemap.op_Inequality
	// UnityEngine.CubemapArray.op_Equality
	// UnityEngine.CubemapArray.op_Implicit
	// UnityEngine.CubemapArray.op_Inequality
	// UnityEngine.CustomRenderTexture.op_Equality
	// UnityEngine.CustomRenderTexture.op_Implicit
	// UnityEngine.CustomRenderTexture.op_Inequality
	// UnityEngine.EventSystems.BaseInput.op_Equality
	// UnityEngine.EventSystems.BaseInput.op_Implicit
	// UnityEngine.EventSystems.BaseInput.op_Inequality
	// UnityEngine.EventSystems.EventSystem.current
	// UnityEngine.EventSystems.EventSystem.op_Equality
	// UnityEngine.EventSystems.EventSystem.op_Implicit
	// UnityEngine.EventSystems.EventSystem.op_Inequality
	// UnityEngine.EventSystems.EventSystem.SetSelectedGameObject
	// UnityEngine.EventSystems.EventTrigger.op_Equality
	// UnityEngine.EventSystems.EventTrigger.op_Implicit
	// UnityEngine.EventSystems.EventTrigger.op_Inequality
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Equality
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Implicit
	// UnityEngine.EventSystems.Physics2DRaycaster.op_Inequality
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Equality
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Implicit
	// UnityEngine.EventSystems.PhysicsRaycaster.op_Inequality
	// UnityEngine.EventSystems.StandaloneInputModule.op_Equality
	// UnityEngine.EventSystems.StandaloneInputModule.op_Implicit
	// UnityEngine.EventSystems.StandaloneInputModule.op_Inequality
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Equality
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Implicit
	// UnityEngine.Experimental.Rendering.RayTracingShader.op_Inequality
	// UnityEngine.Flare.op_Equality
	// UnityEngine.Flare.op_Implicit
	// UnityEngine.Flare.op_Inequality
	// UnityEngine.FlareLayer.op_Equality
	// UnityEngine.FlareLayer.op_Implicit
	// UnityEngine.FlareLayer.op_Inequality
	// UnityEngine.Font.op_Equality
	// UnityEngine.Font.op_Implicit
	// UnityEngine.Font.op_Inequality
	// UnityEngine.GameObject.op_Equality
	// UnityEngine.GameObject.op_Implicit
	// UnityEngine.GameObject.op_Inequality
	// UnityEngine.LayerMask.op_Implicit
	// UnityEngine.LayerMask.op_Implicit
	// UnityEngine.LensFlare.op_Equality
	// UnityEngine.LensFlare.op_Implicit
	// UnityEngine.LensFlare.op_Inequality
	// UnityEngine.Light.op_Equality
	// UnityEngine.Light.op_Implicit
	// UnityEngine.Light.op_Inequality
	// UnityEngine.LightingSettings.op_Equality
	// UnityEngine.LightingSettings.op_Implicit
	// UnityEngine.LightingSettings.op_Inequality
	// UnityEngine.LightmapSettings.op_Equality
	// UnityEngine.LightmapSettings.op_Implicit
	// UnityEngine.LightmapSettings.op_Inequality
	// UnityEngine.LightProbeGroup.op_Equality
	// UnityEngine.LightProbeGroup.op_Implicit
	// UnityEngine.LightProbeGroup.op_Inequality
	// UnityEngine.LightProbeProxyVolume.op_Equality
	// UnityEngine.LightProbeProxyVolume.op_Implicit
	// UnityEngine.LightProbeProxyVolume.op_Inequality
	// UnityEngine.LightProbes.op_Equality
	// UnityEngine.LightProbes.op_Implicit
	// UnityEngine.LightProbes.op_Inequality
	// UnityEngine.LineRenderer.op_Equality
	// UnityEngine.LineRenderer.op_Implicit
	// UnityEngine.LineRenderer.op_Inequality
	// UnityEngine.LODGroup.op_Equality
	// UnityEngine.LODGroup.op_Implicit
	// UnityEngine.LODGroup.op_Inequality
	// UnityEngine.Material.op_Equality
	// UnityEngine.Material.op_Implicit
	// UnityEngine.Material.op_Inequality
	// UnityEngine.Matrix4x4.op_Equality
	// UnityEngine.Matrix4x4.op_Inequality
	// UnityEngine.Matrix4x4.op_Multiply
	// UnityEngine.Matrix4x4.op_Multiply
	// UnityEngine.Mesh.op_Equality
	// UnityEngine.Mesh.op_Implicit
	// UnityEngine.Mesh.op_Inequality
	// UnityEngine.MeshFilter.op_Equality
	// UnityEngine.MeshFilter.op_Implicit
	// UnityEngine.MeshFilter.op_Inequality
	// UnityEngine.MeshRenderer.op_Equality
	// UnityEngine.MeshRenderer.op_Implicit
	// UnityEngine.MeshRenderer.op_Inequality
	// UnityEngine.MonoBehaviour.op_Equality
	// UnityEngine.MonoBehaviour.op_Implicit
	// UnityEngine.MonoBehaviour.op_Inequality
	// UnityEngine.Motion.op_Equality
	// UnityEngine.Motion.op_Implicit
	// UnityEngine.Motion.op_Inequality
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Equality
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Implicit
	// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Inequality
	// UnityEngine.Object.op_Equality
	// UnityEngine.Object.op_Implicit
	// UnityEngine.Object.op_Inequality
	// UnityEngine.OcclusionArea.op_Equality
	// UnityEngine.OcclusionArea.op_Implicit
	// UnityEngine.OcclusionArea.op_Inequality
	// UnityEngine.OcclusionPortal.op_Equality
	// UnityEngine.OcclusionPortal.op_Implicit
	// UnityEngine.OcclusionPortal.op_Inequality
	// UnityEngine.Playables.PlayableDirector.op_Equality
	// UnityEngine.Playables.PlayableDirector.op_Implicit
	// UnityEngine.Playables.PlayableDirector.op_Inequality
	// UnityEngine.Playables.PlayableDirector.Play
	// UnityEngine.Projector.op_Equality
	// UnityEngine.Projector.op_Implicit
	// UnityEngine.Projector.op_Inequality
	// UnityEngine.QualitySettings.op_Equality
	// UnityEngine.QualitySettings.op_Implicit
	// UnityEngine.QualitySettings.op_Inequality
	// UnityEngine.Quaternion.op_Equality
	// UnityEngine.Quaternion.op_Inequality
	// UnityEngine.Quaternion.op_Multiply
	// UnityEngine.Quaternion.op_Multiply
	// UnityEngine.Rect.op_Equality
	// UnityEngine.Rect.op_Inequality
	// UnityEngine.RectTransform.op_Equality
	// UnityEngine.RectTransform.op_Implicit
	// UnityEngine.RectTransform.op_Inequality
	// UnityEngine.ReflectionProbe.op_Equality
	// UnityEngine.ReflectionProbe.op_Implicit
	// UnityEngine.ReflectionProbe.op_Inequality
	// UnityEngine.Renderer.op_Equality
	// UnityEngine.Renderer.op_Implicit
	// UnityEngine.Renderer.op_Inequality
	// UnityEngine.Rendering.GraphicsSettings.op_Equality
	// UnityEngine.Rendering.GraphicsSettings.op_Implicit
	// UnityEngine.Rendering.GraphicsSettings.op_Inequality
	// UnityEngine.Rendering.SortingGroup.op_Equality
	// UnityEngine.Rendering.SortingGroup.op_Implicit
	// UnityEngine.Rendering.SortingGroup.op_Inequality
	// UnityEngine.RenderSettings.op_Equality
	// UnityEngine.RenderSettings.op_Implicit
	// UnityEngine.RenderSettings.op_Inequality
	// UnityEngine.RenderTexture.op_Equality
	// UnityEngine.RenderTexture.op_Implicit
	// UnityEngine.RenderTexture.op_Inequality
	// UnityEngine.RuntimeAnimatorController.op_Equality
	// UnityEngine.RuntimeAnimatorController.op_Implicit
	// UnityEngine.RuntimeAnimatorController.op_Inequality
	// UnityEngine.SceneManagement.Scene.op_Equality
	// UnityEngine.SceneManagement.Scene.op_Inequality
	// UnityEngine.ScriptableObject.op_Equality
	// UnityEngine.ScriptableObject.op_Implicit
	// UnityEngine.ScriptableObject.op_Inequality
	// UnityEngine.Shader.op_Equality
	// UnityEngine.Shader.op_Implicit
	// UnityEngine.Shader.op_Inequality
	// UnityEngine.ShaderVariantCollection.op_Equality
	// UnityEngine.ShaderVariantCollection.op_Implicit
	// UnityEngine.ShaderVariantCollection.op_Inequality
	// UnityEngine.SkinnedMeshRenderer.op_Equality
	// UnityEngine.SkinnedMeshRenderer.op_Implicit
	// UnityEngine.SkinnedMeshRenderer.op_Inequality
	// UnityEngine.Skybox.op_Equality
	// UnityEngine.Skybox.op_Implicit
	// UnityEngine.Skybox.op_Inequality
	// UnityEngine.SparseTexture.op_Equality
	// UnityEngine.SparseTexture.op_Implicit
	// UnityEngine.SparseTexture.op_Inequality
	// UnityEngine.Sprite.op_Equality
	// UnityEngine.Sprite.op_Implicit
	// UnityEngine.Sprite.op_Inequality
	// UnityEngine.SpriteRenderer.op_Equality
	// UnityEngine.SpriteRenderer.op_Implicit
	// UnityEngine.SpriteRenderer.op_Inequality
	// UnityEngine.TextAsset.op_Equality
	// UnityEngine.TextAsset.op_Implicit
	// UnityEngine.TextAsset.op_Inequality
	// UnityEngine.TextMesh.op_Equality
	// UnityEngine.TextMesh.op_Implicit
	// UnityEngine.TextMesh.op_Inequality
	// UnityEngine.Texture.op_Equality
	// UnityEngine.Texture.op_Implicit
	// UnityEngine.Texture.op_Inequality
	// UnityEngine.Texture2D.op_Equality
	// UnityEngine.Texture2D.op_Implicit
	// UnityEngine.Texture2D.op_Inequality
	// UnityEngine.Texture2DArray.op_Equality
	// UnityEngine.Texture2DArray.op_Implicit
	// UnityEngine.Texture2DArray.op_Inequality
	// UnityEngine.Texture3D.op_Equality
	// UnityEngine.Texture3D.op_Implicit
	// UnityEngine.Texture3D.op_Inequality
	// UnityEngine.TrailRenderer.op_Equality
	// UnityEngine.TrailRenderer.op_Implicit
	// UnityEngine.TrailRenderer.op_Inequality
	// UnityEngine.Transform.op_Equality
	// UnityEngine.Transform.op_Implicit
	// UnityEngine.Transform.op_Inequality
	// UnityEngine.U2D.SpriteAtlas.op_Equality
	// UnityEngine.U2D.SpriteAtlas.op_Implicit
	// UnityEngine.U2D.SpriteAtlas.op_Inequality
	// UnityEngine.UI.AspectRatioFitter.op_Equality
	// UnityEngine.UI.AspectRatioFitter.op_Implicit
	// UnityEngine.UI.AspectRatioFitter.op_Inequality
	// UnityEngine.UI.Button.op_Equality
	// UnityEngine.UI.Button.op_Implicit
	// UnityEngine.UI.Button.op_Inequality
	// UnityEngine.UI.CanvasScaler.op_Equality
	// UnityEngine.UI.CanvasScaler.op_Implicit
	// UnityEngine.UI.CanvasScaler.op_Inequality
	// UnityEngine.UI.ContentSizeFitter.op_Equality
	// UnityEngine.UI.ContentSizeFitter.op_Implicit
	// UnityEngine.UI.ContentSizeFitter.op_Inequality
	// UnityEngine.UI.Dropdown.op_Equality
	// UnityEngine.UI.Dropdown.op_Implicit
	// UnityEngine.UI.Dropdown.op_Inequality
	// UnityEngine.UI.GraphicRaycaster.op_Equality
	// UnityEngine.UI.GraphicRaycaster.op_Implicit
	// UnityEngine.UI.GraphicRaycaster.op_Inequality
	// UnityEngine.UI.GridLayoutGroup.op_Equality
	// UnityEngine.UI.GridLayoutGroup.op_Implicit
	// UnityEngine.UI.GridLayoutGroup.op_Inequality
	// UnityEngine.UI.HorizontalLayoutGroup.op_Equality
	// UnityEngine.UI.HorizontalLayoutGroup.op_Implicit
	// UnityEngine.UI.HorizontalLayoutGroup.op_Inequality
	// UnityEngine.UI.Image.op_Equality
	// UnityEngine.UI.Image.op_Implicit
	// UnityEngine.UI.Image.op_Inequality
	// UnityEngine.UI.Image.sprite
	// UnityEngine.UI.InputField.op_Equality
	// UnityEngine.UI.InputField.op_Implicit
	// UnityEngine.UI.InputField.op_Inequality
	// UnityEngine.UI.LayoutElement.op_Equality
	// UnityEngine.UI.LayoutElement.op_Implicit
	// UnityEngine.UI.LayoutElement.op_Inequality
	// UnityEngine.UI.Mask.op_Equality
	// UnityEngine.UI.Mask.op_Implicit
	// UnityEngine.UI.Mask.op_Inequality
	// UnityEngine.UI.Outline.op_Equality
	// UnityEngine.UI.Outline.op_Implicit
	// UnityEngine.UI.Outline.op_Inequality
	// UnityEngine.UI.PositionAsUV1.op_Equality
	// UnityEngine.UI.PositionAsUV1.op_Implicit
	// UnityEngine.UI.PositionAsUV1.op_Inequality
	// UnityEngine.UI.RawImage.op_Equality
	// UnityEngine.UI.RawImage.op_Implicit
	// UnityEngine.UI.RawImage.op_Inequality
	// UnityEngine.UI.RectMask2D.op_Equality
	// UnityEngine.UI.RectMask2D.op_Implicit
	// UnityEngine.UI.RectMask2D.op_Inequality
	// UnityEngine.UI.Scrollbar.op_Equality
	// UnityEngine.UI.Scrollbar.op_Implicit
	// UnityEngine.UI.Scrollbar.op_Inequality
	// UnityEngine.UI.ScrollRect.op_Equality
	// UnityEngine.UI.ScrollRect.op_Implicit
	// UnityEngine.UI.ScrollRect.op_Inequality
	// UnityEngine.UI.Selectable.op_Equality
	// UnityEngine.UI.Selectable.op_Implicit
	// UnityEngine.UI.Selectable.op_Inequality
	// UnityEngine.UI.Shadow.op_Equality
	// UnityEngine.UI.Shadow.op_Implicit
	// UnityEngine.UI.Shadow.op_Inequality
	// UnityEngine.UI.Slider.minValue
	// UnityEngine.UI.Slider.op_Equality
	// UnityEngine.UI.Slider.op_Implicit
	// UnityEngine.UI.Slider.op_Inequality
	// UnityEngine.UI.Slider.SetValueWithoutNotify
	// UnityEngine.UI.Slider.value
	// UnityEngine.UI.Text.op_Equality
	// UnityEngine.UI.Text.op_Implicit
	// UnityEngine.UI.Text.op_Inequality
	// UnityEngine.UI.Toggle.isOn
	// UnityEngine.UI.Toggle.op_Equality
	// UnityEngine.UI.Toggle.op_Implicit
	// UnityEngine.UI.Toggle.op_Inequality
	// UnityEngine.UI.Toggle.SetIsOnWithoutNotify
	// UnityEngine.UI.ToggleGroup.op_Equality
	// UnityEngine.UI.ToggleGroup.op_Implicit
	// UnityEngine.UI.ToggleGroup.op_Inequality
	// UnityEngine.UI.VerticalLayoutGroup.op_Equality
	// UnityEngine.UI.VerticalLayoutGroup.op_Implicit
	// UnityEngine.UI.VerticalLayoutGroup.op_Inequality
	// UnityEngine.Vector2.op_Addition
	// UnityEngine.Vector2.op_Division
	// UnityEngine.Vector2.op_Division
	// UnityEngine.Vector2.op_Equality
	// UnityEngine.Vector2.op_Implicit
	// UnityEngine.Vector2.op_Implicit
	// UnityEngine.Vector2.op_Inequality
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Multiply
	// UnityEngine.Vector2.op_Subtraction
	// UnityEngine.Vector2.op_UnaryNegation
	// UnityEngine.Vector3.op_Addition
	// UnityEngine.Vector3.op_Division
	// UnityEngine.Vector3.op_Equality
	// UnityEngine.Vector3.op_Inequality
	// UnityEngine.Vector3.op_Multiply
	// UnityEngine.Vector3.op_Multiply
	// UnityEngine.Vector3.op_Subtraction
	// UnityEngine.Vector3.op_UnaryNegation
	// UnityEngine.Vector4.op_Addition
	// UnityEngine.Vector4.op_Division
	// UnityEngine.Vector4.op_Equality
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Implicit
	// UnityEngine.Vector4.op_Inequality
	// UnityEngine.Vector4.op_Multiply
	// UnityEngine.Vector4.op_Multiply
	// UnityEngine.Vector4.op_Subtraction
	// UnityEngine.Vector4.op_UnaryNegation
	// UnityEngine.WebCamTexture.op_Equality
	// UnityEngine.WebCamTexture.op_Implicit
	// UnityEngine.WebCamTexture.op_Inequality
	[UnityEngine.Scripting.PreserveAttribute()]
	public class AotStubs
	{
		
		// AIAgent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AIAgent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// AIAgent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AIAgent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// AIAgent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void AIAgent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ApplyForce.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ApplyForce_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ApplyForce.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ApplyForce_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ApplyForce.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ApplyForce_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Assets.Scripts.SpriteOrderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Assets_Scripts_SpriteOrderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Assets.Scripts.SpriteOrderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Assets_Scripts_SpriteOrderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Assets.Scripts.SpriteOrderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Assets_Scripts_SpriteOrderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BlockProvider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlockProvider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BlockProvider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlockProvider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// BlockProvider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlockProvider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BlockVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlockVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BlockVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlockVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// BlockVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BlockVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BoardVisualizer.EnableGUI
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoardVisualizer_EnableGUI()
		{
			global::BoardVisualizer target = default(global::BoardVisualizer);
			bool accessor = target.EnableGUI;
			target.EnableGUI = default(bool);
			global::Ludiq.InstancePropertyAccessor<BoardVisualizer, bool> optimized = new global::Ludiq.InstancePropertyAccessor<BoardVisualizer, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::BoardVisualizer));
			optimized.SetValue(default(global::BoardVisualizer), default(bool));
		}
		
		// BoardVisualizer.FixedPLayfield
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoardVisualizer_FixedPLayfield()
		{
			global::BoardVisualizer target = default(global::BoardVisualizer);
			bool accessor = target.FixedPLayfield;
			target.FixedPLayfield = default(bool);
			global::Ludiq.InstancePropertyAccessor<BoardVisualizer, bool> optimized = new global::Ludiq.InstancePropertyAccessor<BoardVisualizer, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::BoardVisualizer));
			optimized.SetValue(default(global::BoardVisualizer), default(bool));
		}
		
		// BoardVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoardVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// BoardVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoardVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// BoardVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void BoardVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.AnimatorMessageListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_AnimatorMessageListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.AnimatorMessageListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_AnimatorMessageListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.AnimatorMessageListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_AnimatorMessageListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMachine.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMachine.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMachine.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMachine_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMacro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMacro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMacro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMacro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.FlowMacro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_FlowMacro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMachine.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMachine_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMachine.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMachine_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMachine.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMachine_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMacro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMacro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMacro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMacro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Bolt.StateMacro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Bolt_StateMacro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraMimic.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraMimic_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CameraMimic.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraMimic_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CameraMimic.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CameraMimic_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CollapseEffectModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CollapseEffectModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CollapseEffectModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CollapseEffectModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CollapseEffectModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CollapseEffectModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ColorizeEffectModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ColorizeEffectModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ColorizeEffectModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ColorizeEffectModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ColorizeEffectModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ColorizeEffectModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AnimationCurveAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AnimationCurveAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AnimationCurveAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AnimationCurveAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AnimationCurveAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AnimationCurveAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioDatabase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioDatabase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioDatabase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioDatabase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioDatabase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioDatabase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioDatabaseEx.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioDatabaseEx_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioDatabaseEx.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioDatabaseEx_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioDatabaseEx.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioDatabaseEx_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioMixerPlayableAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioMixerPlayableAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioMixerPlayableAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioMixerPlayableAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioMixerPlayableAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioMixerPlayableAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioMixerTrackAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioMixerTrackAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioMixerTrackAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioMixerTrackAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.AudioMixerTrackAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_AudioMixerTrackAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.CallbackBase.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_CallbackBase_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.CallbackBase.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_CallbackBase_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.CallbackBase.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_CallbackBase_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.CommandSystem.CommandInterpreter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_CommandSystem_CommandInterpreter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.CommandSystem.CommandInterpreter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_CommandSystem_CommandInterpreter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.CommandSystem.CommandInterpreter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_CommandSystem_CommandInterpreter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.CommandSystem.CommandSequencer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_CommandSystem_CommandSequencer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.CommandSystem.CommandSequencer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_CommandSystem_CommandSequencer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.CommandSystem.CommandSequencer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_CommandSystem_CommandSequencer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Core.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Core_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Core.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Core_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Core.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Core_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Downloader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Downloader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Downloader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Downloader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Downloader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Downloader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.ActionModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_ActionModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.ActionModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_ActionModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.ActionModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_ActionModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.Effect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_Effect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.Effect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_Effect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.Effect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_Effect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.RotationDeviationModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_RotationDeviationModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.RotationDeviationModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_RotationDeviationModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.RotationDeviationModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_RotationDeviationModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.SpawnModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_SpawnModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.SpawnModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_SpawnModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Effect.SpawnModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Effect_SpawnModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.EventSystem.MessageEmitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_EventSystem_MessageEmitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.EventSystem.MessageEmitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_EventSystem_MessageEmitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.EventSystem.MessageEmitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_EventSystem_MessageEmitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.EventSystem.MessageEmitter.Send
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_EventSystem_MessageEmitter_Send()
		{
			global::Core.EventSystem.MessageEmitter target = default(global::Core.EventSystem.MessageEmitter);
			object arg0 = default(object);
			object arg1 = default(object);
			target.Send(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<Core.EventSystem.MessageEmitter, object, object> optimized = new global::Ludiq.InstanceActionInvoker<Core.EventSystem.MessageEmitter, object, object>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::Core.EventSystem.MessageEmitter), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.EventSystem.MessageSystemDefault.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_EventSystem_MessageSystemDefault_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.EventSystem.MessageSystemDefault.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_EventSystem_MessageSystemDefault_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.EventSystem.MessageSystemDefault.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_EventSystem_MessageSystemDefault_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.GameObjectReference.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_GameObjectReference_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.GameObjectReference.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_GameObjectReference_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.GameObjectReference.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_GameObjectReference_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.HierarchyRecorder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_HierarchyRecorder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.HierarchyRecorder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_HierarchyRecorder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.HierarchyRecorder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_HierarchyRecorder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.LocalizationSync.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_LocalizationSync_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.LocalizationSync.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_LocalizationSync_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.LocalizationSync.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_LocalizationSync_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.LocalizedDropdown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_LocalizedDropdown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.LocalizedDropdown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_LocalizedDropdown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.LocalizedDropdown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_LocalizedDropdown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.LocalizedText.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_LocalizedText_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.LocalizedText.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_LocalizedText_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.LocalizedText.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_LocalizedText_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.MinMaxCurveAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_MinMaxCurveAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.MinMaxCurveAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_MinMaxCurveAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.MinMaxCurveAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_MinMaxCurveAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.DebugControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_DebugControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.DebugControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_DebugControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.DebugControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_DebugControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.FPSCounter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_FPSCounter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.FPSCounter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_FPSCounter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.FPSCounter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_FPSCounter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.KeepAspect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_KeepAspect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.KeepAspect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_KeepAspect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.KeepAspect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_KeepAspect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.Localization.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_Localization_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.Localization.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_Localization_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.Localization.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_Localization_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.MessageSystemDefault.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_MessageSystemDefault_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.MessageSystemDefault.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_MessageSystemDefault_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.MessageSystemDefault.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_MessageSystemDefault_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.MousePosition.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_MousePosition_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.MousePosition.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_MousePosition_op_Implicit()
		{
			global::Core.Module.MousePosition arg0 = default(global::Core.Module.MousePosition);
			UnityEngine.Vector3 conversion = ((UnityEngine.Vector3)(arg0));
			global::Ludiq.StaticFunctionInvoker<Core.Module.MousePosition, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<Core.Module.MousePosition, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.MousePosition.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_MousePosition_op_Implicit_0()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.MousePosition.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_MousePosition_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.Serialization.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_Serialization_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.Serialization.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_Serialization_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.Serialization.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_Serialization_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.TaskManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_TaskManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.TaskManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_TaskManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.TaskManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_TaskManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.TimeControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_TimeControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.TimeControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_TimeControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.TimeControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_TimeControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.TimeController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_TimeController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.TimeController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_TimeController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.Module.TimeController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_Module_TimeController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.MotionScaler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_MotionScaler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.MotionScaler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_MotionScaler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.MotionScaler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_MotionScaler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NameGenerator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NameGenerator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NameGenerator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NameGenerator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NameGenerator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NameGenerator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.ActivationNode.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_ActivationNode_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.ActivationNode.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_ActivationNode_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.ActivationNode.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_ActivationNode_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.ComparisonNode.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_ComparisonNode_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.ComparisonNode.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_ComparisonNode_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.ComparisonNode.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_ComparisonNode_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.DelayNode.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_DelayNode_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.DelayNode.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_DelayNode_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.DelayNode.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_DelayNode_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.FinishNode.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_FinishNode_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.FinishNode.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_FinishNode_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.FinishNode.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_FinishNode_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.LogNode.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_LogNode_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.LogNode.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_LogNode_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.LogNode.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_LogNode_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.SequenceNode.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_SequenceNode_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.SequenceNode.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_SequenceNode_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.SequenceNode.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_SequenceNode_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.StartNode.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_StartNode_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.StartNode.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_StartNode_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.NodeLogic.StartNode.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_NodeLogic_StartNode_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.ObjectDestroyer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_ObjectDestroyer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.ObjectDestroyer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_ObjectDestroyer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.ObjectDestroyer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_ObjectDestroyer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.ObjectSpawner.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_ObjectSpawner_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.ObjectSpawner.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_ObjectSpawner_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.ObjectSpawner.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_ObjectSpawner_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnDestroyCallback.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnDestroyCallback_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnDestroyCallback.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnDestroyCallback_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnDestroyCallback.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnDestroyCallback_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnGuiCallback.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnGuiCallback_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnGuiCallback.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnGuiCallback_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnGuiCallback.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnGuiCallback_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnStartCallback.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnStartCallback_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnStartCallback.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnStartCallback_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnStartCallback.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnStartCallback_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnUpdateCallback.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnUpdateCallback_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnUpdateCallback.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnUpdateCallback_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OnUpdateCallback.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OnUpdateCallback_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OrientedSprite.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OrientedSprite_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OrientedSprite.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OrientedSprite_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.OrientedSprite.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_OrientedSprite_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.PhysicsAffector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_PhysicsAffector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.PhysicsAffector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_PhysicsAffector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.PhysicsAffector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_PhysicsAffector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.RelativeJointRotationFix.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_RelativeJointRotationFix_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.RelativeJointRotationFix.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_RelativeJointRotationFix_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.RelativeJointRotationFix.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_RelativeJointRotationFix_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.ResourcePathComponent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_ResourcePathComponent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.ResourcePathComponent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_ResourcePathComponent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.ResourcePathComponent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_ResourcePathComponent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.RollCombination.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_RollCombination_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.RollCombination.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_RollCombination_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.RollCombination.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_RollCombination_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SerializableObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SerializableObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SerializableObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SerializableObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SerializableObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SerializableObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SerializatorTransform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SerializatorTransform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SerializatorTransform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SerializatorTransform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SerializatorTransform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SerializatorTransform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SerializatorUniversal.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SerializatorUniversal_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SerializatorUniversal.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SerializatorUniversal_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SerializatorUniversal.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SerializatorUniversal_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SetCoreMainCamera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SetCoreMainCamera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SetCoreMainCamera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SetCoreMainCamera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SetCoreMainCamera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SetCoreMainCamera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SimpleSpriteAnimation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SimpleSpriteAnimation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SimpleSpriteAnimation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SimpleSpriteAnimation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SimpleSpriteAnimation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SimpleSpriteAnimation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SoundManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SoundManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SoundManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SoundManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SoundManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SoundManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SoundPlayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SoundPlayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SoundPlayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SoundPlayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SoundPlayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SoundPlayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SpriteRendererPositionOrder.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SpriteRendererPositionOrder_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SpriteRendererPositionOrder.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SpriteRendererPositionOrder_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.SpriteRendererPositionOrder.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_SpriteRendererPositionOrder_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.TimerComponent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_TimerComponent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.TimerComponent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_TimerComponent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.TimerComponent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_TimerComponent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.TweenTest.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_TweenTest_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.TweenTest.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_TweenTest_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.TweenTest.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_TweenTest_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UILinkActivator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UILinkActivator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UILinkActivator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UILinkActivator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UILinkActivator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UILinkActivator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITextSizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITextSizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITextSizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITextSizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITextSizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITextSizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITinyTooltip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITinyTooltip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITinyTooltip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITinyTooltip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITinyTooltip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITinyTooltip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITinyTooltipContent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITinyTooltipContent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITinyTooltipContent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITinyTooltipContent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITinyTooltipContent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITinyTooltipContent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltipAgentClick.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltipAgentClick_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltipAgentClick.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltipAgentClick_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltipAgentClick.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltipAgentClick_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltipAgentHover.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltipAgentHover_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltipAgentHover.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltipAgentHover_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltipAgentHover.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltipAgentHover_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltipDictionary.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltipDictionary_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltipDictionary.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltipDictionary_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITMPLinkTooltipDictionary.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITMPLinkTooltipDictionary_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITooltip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITooltip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITooltip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITooltip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UITooltip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UITooltip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UIURLLinkOpener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UIURLLinkOpener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UIURLLinkOpener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UIURLLinkOpener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UIURLLinkOpener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UIURLLinkOpener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UniqueIDComponent.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UniqueIDComponent_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UniqueIDComponent.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UniqueIDComponent_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// Core.UniqueIDComponent.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void Core_UniqueIDComponent_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CowEffect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CowEffect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// CowEffect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CowEffect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// CowEffect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void CowEffect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DontDestroyOnLoad.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DontDestroyOnLoad_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// DontDestroyOnLoad.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DontDestroyOnLoad_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// DontDestroyOnLoad.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void DontDestroyOnLoad_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_Equality()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_GreaterThan
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_GreaterThan()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 > arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_GreaterThanOrEqual
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_GreaterThanOrEqual()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 >= arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_Inequality()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_LessThan
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_LessThan()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 < arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// float.op_LessThanOrEqual
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void float_op_LessThanOrEqual()
		{
			float arg0 = default(float);
			float arg1 = default(float);
			bool @operator = (arg0 <= arg1);
			global::Ludiq.StaticFunctionInvoker<float, float, bool> optimized = new global::Ludiq.StaticFunctionInvoker<float, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ImpulseEffectModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ImpulseEffectModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ImpulseEffectModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ImpulseEffectModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ImpulseEffectModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ImpulseEffectModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickListener.JoystickConnected
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickListener_JoystickConnected()
		{
			bool accessor = global::JoystickListener.JoystickConnected;
			global::Ludiq.StaticPropertyAccessor<bool> optimized = new global::Ludiq.StaticPropertyAccessor<bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
			optimized.SetValue(null, default(bool));
		}
		
		// JoystickListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// JoystickListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void JoystickListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelCounter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelCounter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelCounter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelCounter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LevelCounter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelCounter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelData.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelData_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelData.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelData_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LevelData.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelData_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelProgressVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelProgressVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelProgressVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelProgressVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LevelProgressVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelProgressVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// LevelVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// LevelVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void LevelVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NextShapeVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NextShapeVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// NextShapeVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NextShapeVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// NextShapeVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void NextShapeVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlayerController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlayerController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlayerController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlayerController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PlayerController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlayerController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlayerPrefValue.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlayerPrefValue_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PlayerPrefValue.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlayerPrefValue_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PlayerPrefValue.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PlayerPrefValue_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PostPrecessControl.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PostPrecessControl_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// PostPrecessControl.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PostPrecessControl_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// PostPrecessControl.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void PostPrecessControl_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScoresCounter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScoresCounter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScoresCounter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScoresCounter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ScoresCounter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScoresCounter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScoreVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScoreVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ScoreVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScoreVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ScoreVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ScoreVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ShapePositionVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ShapePositionVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ShapePositionVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ShapePositionVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ShapePositionVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ShapePositionVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ShapeRouteEffectModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ShapeRouteEffectModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ShapeRouteEffectModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ShapeRouteEffectModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ShapeRouteEffectModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ShapeRouteEffectModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ShapeVisualizer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ShapeVisualizer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// ShapeVisualizer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ShapeVisualizer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// ShapeVisualizer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void ShapeVisualizer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SpriteRendererColorLerp.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpriteRendererColorLerp_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// SpriteRendererColorLerp.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpriteRendererColorLerp_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// SpriteRendererColorLerp.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void SpriteRendererColorLerp_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_op_Equality()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<string, string, bool> optimized = new global::Ludiq.StaticFunctionInvoker<string, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// string.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void string_op_Inequality()
		{
			string arg0 = default(string);
			string arg1 = default(string);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<string, string, bool> optimized = new global::Ludiq.StaticFunctionInvoker<string, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TetrisManager.AI
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TetrisManager_AI()
		{
			global::TetrisManager target = default(global::TetrisManager);
			bool accessor = target.AI;
			target.AI = default(bool);
			global::Ludiq.InstancePropertyAccessor<TetrisManager, bool> optimized = new global::Ludiq.InstancePropertyAccessor<TetrisManager, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::TetrisManager));
			optimized.SetValue(default(global::TetrisManager), default(bool));
		}
		
		// TetrisManager.ClearBoard
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TetrisManager_ClearBoard()
		{
			global::TetrisManager target = default(global::TetrisManager);
			int arg0 = default(int);
			target.ClearBoard(arg0);
			global::Ludiq.InstanceActionInvoker<TetrisManager, int> optimized = new global::Ludiq.InstanceActionInvoker<TetrisManager, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::TetrisManager), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TetrisManager.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TetrisManager_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TetrisManager.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TetrisManager_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TetrisManager.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TetrisManager_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TetrisManager.Pause
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TetrisManager_Pause()
		{
			global::TetrisManager target = default(global::TetrisManager);
			bool accessor = target.Pause;
			target.Pause = default(bool);
			global::Ludiq.InstancePropertyAccessor<TetrisManager, bool> optimized = new global::Ludiq.InstancePropertyAccessor<TetrisManager, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::TetrisManager));
			optimized.SetValue(default(global::TetrisManager), default(bool));
		}
		
		// TetrisManager.PlayerControl
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TetrisManager_PlayerControl()
		{
			global::TetrisManager target = default(global::TetrisManager);
			bool accessor = target.PlayerControl;
			target.PlayerControl = default(bool);
			global::Ludiq.InstancePropertyAccessor<TetrisManager, bool> optimized = new global::Ludiq.InstancePropertyAccessor<TetrisManager, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::TetrisManager));
			optimized.SetValue(default(global::TetrisManager), default(bool));
		}
		
		// TetrisManager.SoftDropTimeScale
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TetrisManager_SoftDropTimeScale()
		{
			global::TetrisManager target = default(global::TetrisManager);
			float accessor = target.SoftDropTimeScale;
			target.SoftDropTimeScale = default(float);
			global::Ludiq.InstancePropertyAccessor<TetrisManager, float> optimized = new global::Ludiq.InstancePropertyAccessor<TetrisManager, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::TetrisManager));
			optimized.SetValue(default(global::TetrisManager), default(float));
		}
		
		// TMPro.TextContainer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextContainer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextContainer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshPro.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshPro_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TextMeshProUGUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TextMeshProUGUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ColorGradient.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ColorGradient_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.SetValueWithoutNotify
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_SetValueWithoutNotify()
		{
			global::TMPro.TMP_Dropdown target = default(global::TMPro.TMP_Dropdown);
			int arg0 = default(int);
			target.SetValueWithoutNotify(arg0);
			global::Ludiq.InstanceActionInvoker<TMPro.TMP_Dropdown, int> optimized = new global::Ludiq.InstanceActionInvoker<TMPro.TMP_Dropdown, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::TMPro.TMP_Dropdown), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Dropdown.value
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Dropdown_value()
		{
			global::TMPro.TMP_Dropdown target = default(global::TMPro.TMP_Dropdown);
			int accessor = target.value;
			target.value = default(int);
			global::Ludiq.InstancePropertyAccessor<TMPro.TMP_Dropdown, int> optimized = new global::Ludiq.InstancePropertyAccessor<TMPro.TMP_Dropdown, int>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::TMPro.TMP_Dropdown));
			optimized.SetValue(default(global::TMPro.TMP_Dropdown), default(int));
		}
		
		// TMPro.TMP_FontAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_FontAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_FontAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_InputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_InputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_PackageResourceImporterWindow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_PackageResourceImporterWindow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_ScrollbarEventHandler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_ScrollbarEventHandler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SelectionCaret.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SelectionCaret_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_Settings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_Settings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAnimator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAnimator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SpriteAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SpriteAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_StyleSheet.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_StyleSheet_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// TMPro.TMP_SubMeshUI.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void TMPro_TMP_SubMeshUI_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animation.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animation_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimationClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimationClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.AimConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_AimConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.LookAtConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_LookAtConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ParentConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ParentConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.PositionConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_PositionConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.RotationConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_RotationConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animations.ScaleConstraint.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animations_ScaleConstraint_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.GetBool
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_GetBool()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			string arg0 = default(string);
			target.GetBool(arg0);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Animator, string, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Animator, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Animator.SetBool
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Animator_SetBool()
		{
			global::UnityEngine.Animator target = default(global::UnityEngine.Animator);
			string arg0 = default(string);
			bool arg1 = default(bool);
			target.SetBool(arg0, arg1);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string, bool> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Animator, string, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Animator), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AnimatorOverrideController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AnimatorOverrideController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixer.SetFloat
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixer_SetFloat()
		{
			global::UnityEngine.Audio.AudioMixer target = default(global::UnityEngine.Audio.AudioMixer);
			string arg0 = default(string);
			float arg1 = default(float);
			target.SetFloat(arg0, arg1);
			global::Ludiq.InstanceFunctionInvoker<UnityEngine.Audio.AudioMixer, string, float, bool> optimized = new global::Ludiq.InstanceFunctionInvoker<UnityEngine.Audio.AudioMixer, string, float, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Audio.AudioMixer), arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Audio.AudioMixerSnapshot.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Audio_AudioMixerSnapshot_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioChorusFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioChorusFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioClip.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioClip_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioDistortionFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioDistortionFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioEchoFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioEchoFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioHighPassFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioHighPassFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioListener.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioListener_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioLowPassFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioLowPassFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioReverbZone.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioReverbZone_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AudioSource.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AudioSource_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Avatar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Avatar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.AvatarMask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_AvatarMask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Behaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Behaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.BillboardRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_BillboardRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Bounds.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Bounds_op_Equality()
		{
			global::UnityEngine.Bounds arg0 = default(global::UnityEngine.Bounds);
			global::UnityEngine.Bounds arg1 = default(global::UnityEngine.Bounds);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Bounds.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Bounds_op_Inequality()
		{
			global::UnityEngine.Bounds arg0 = default(global::UnityEngine.Bounds);
			global::UnityEngine.Bounds arg1 = default(global::UnityEngine.Bounds);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Bounds, UnityEngine.Bounds, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Camera.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Camera_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Addition()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Division()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			float arg1 = default(float);
			UnityEngine.Color @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Equality()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Implicit()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Implicit_0()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			UnityEngine.Color conversion = ((UnityEngine.Color)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Inequality()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply_0()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			float arg1 = default(float);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, float, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Multiply_1()
		{
			float arg0 = default(float);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Color.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Color_op_Subtraction()
		{
			global::UnityEngine.Color arg0 = default(global::UnityEngine.Color);
			global::UnityEngine.Color arg1 = default(global::UnityEngine.Color);
			UnityEngine.Color @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Color, UnityEngine.Color, UnityEngine.Color>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Component.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Component_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ComputeShader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ComputeShader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Cubemap.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Cubemap_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CubemapArray.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CubemapArray_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.CustomRenderTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_CustomRenderTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.BaseInput.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_BaseInput_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.current
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_current()
		{
			global::UnityEngine.EventSystems.EventSystem accessor = global::UnityEngine.EventSystems.EventSystem.current;
			global::UnityEngine.EventSystems.EventSystem.current = default(global::UnityEngine.EventSystems.EventSystem);
			global::Ludiq.StaticPropertyAccessor<UnityEngine.EventSystems.EventSystem> optimized = new global::Ludiq.StaticPropertyAccessor<UnityEngine.EventSystems.EventSystem>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(null);
			optimized.SetValue(null, default(global::UnityEngine.EventSystems.EventSystem));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventSystem.SetSelectedGameObject
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventSystem_SetSelectedGameObject()
		{
			global::UnityEngine.EventSystems.EventSystem target = default(global::UnityEngine.EventSystems.EventSystem);
			global::UnityEngine.GameObject arg0 = default(global::UnityEngine.GameObject);
			target.SetSelectedGameObject(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.EventSystems.EventSystem, UnityEngine.GameObject> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.EventSystems.EventSystem, UnityEngine.GameObject>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.EventSystems.EventSystem), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.EventTrigger.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_EventTrigger_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.Physics2DRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_Physics2DRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.PhysicsRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_PhysicsRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.EventSystems.StandaloneInputModule.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_EventSystems_StandaloneInputModule_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Experimental.Rendering.RayTracingShader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Experimental_Rendering_RayTracingShader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Flare.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Flare_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.FlareLayer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_FlareLayer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Font.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Font_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.GameObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_GameObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LayerMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LayerMask_op_Implicit()
		{
			global::UnityEngine.LayerMask arg0 = default(global::UnityEngine.LayerMask);
			int conversion = ((int)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.LayerMask, int> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.LayerMask, int>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LayerMask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LayerMask_op_Implicit_0()
		{
			int arg0 = default(int);
			UnityEngine.LayerMask conversion = ((UnityEngine.LayerMask)(arg0));
			global::Ludiq.StaticFunctionInvoker<int, UnityEngine.LayerMask> optimized = new global::Ludiq.StaticFunctionInvoker<int, UnityEngine.LayerMask>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LensFlare.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LensFlare_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Light.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Light_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightingSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightingSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightmapSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightmapSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbeProxyVolume.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbeProxyVolume_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LightProbes.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LightProbes_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LineRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LineRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.LODGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_LODGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Material.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Material_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Equality()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Inequality()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Multiply()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Matrix4x4 arg1 = default(global::UnityEngine.Matrix4x4);
			UnityEngine.Matrix4x4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, UnityEngine.Matrix4x4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Matrix4x4, UnityEngine.Matrix4x4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Matrix4x4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Matrix4x4_op_Multiply_0()
		{
			global::UnityEngine.Matrix4x4 arg0 = default(global::UnityEngine.Matrix4x4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Matrix4x4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Mesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Mesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshFilter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshFilter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MeshRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MeshRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.MonoBehaviour.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_MonoBehaviour_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Motion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Motion_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Networking.PlayerConnection.PlayerConnection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Networking_PlayerConnection_PlayerConnection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Object.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Object_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionArea.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionArea_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.OcclusionPortal.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_OcclusionPortal_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Playables.PlayableDirector.Play
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Playables_PlayableDirector_Play()
		{
			global::UnityEngine.Playables.PlayableDirector target = default(global::UnityEngine.Playables.PlayableDirector);
			global::UnityEngine.Playables.PlayableAsset arg0 = default(global::UnityEngine.Playables.PlayableAsset);
			target.Play(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.Playables.PlayableDirector, UnityEngine.Playables.PlayableAsset> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.Playables.PlayableDirector, UnityEngine.Playables.PlayableAsset>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.Playables.PlayableDirector), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Projector.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Projector_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.QualitySettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_QualitySettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Equality()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Inequality()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Multiply()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Quaternion arg1 = default(global::UnityEngine.Quaternion);
			UnityEngine.Quaternion @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, UnityEngine.Quaternion> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Quaternion, UnityEngine.Quaternion>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Quaternion.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Quaternion_op_Multiply_0()
		{
			global::UnityEngine.Quaternion arg0 = default(global::UnityEngine.Quaternion);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Quaternion, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rect_op_Equality()
		{
			global::UnityEngine.Rect arg0 = default(global::UnityEngine.Rect);
			global::UnityEngine.Rect arg1 = default(global::UnityEngine.Rect);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rect_op_Inequality()
		{
			global::UnityEngine.Rect arg0 = default(global::UnityEngine.Rect);
			global::UnityEngine.Rect arg1 = default(global::UnityEngine.Rect);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Rect, UnityEngine.Rect, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RectTransform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RectTransform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ReflectionProbe.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ReflectionProbe_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Renderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Renderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.GraphicsSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_GraphicsSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Rendering.SortingGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Rendering_SortingGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderSettings.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderSettings_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RenderTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RenderTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.RuntimeAnimatorController.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_RuntimeAnimatorController_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.Scene.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_Scene_op_Equality()
		{
			global::UnityEngine.SceneManagement.Scene arg0 = default(global::UnityEngine.SceneManagement.Scene);
			global::UnityEngine.SceneManagement.Scene arg1 = default(global::UnityEngine.SceneManagement.Scene);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SceneManagement.Scene.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SceneManagement_Scene_op_Inequality()
		{
			global::UnityEngine.SceneManagement.Scene arg0 = default(global::UnityEngine.SceneManagement.Scene);
			global::UnityEngine.SceneManagement.Scene arg1 = default(global::UnityEngine.SceneManagement.Scene);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.SceneManagement.Scene, UnityEngine.SceneManagement.Scene, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ScriptableObject.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ScriptableObject_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Shader.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Shader_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.ShaderVariantCollection.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_ShaderVariantCollection_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SkinnedMeshRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SkinnedMeshRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Skybox.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Skybox_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SparseTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SparseTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Sprite.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Sprite_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.SpriteRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_SpriteRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextAsset.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextAsset_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TextMesh.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TextMesh_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture2DArray.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture2DArray_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Texture3D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Texture3D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.TrailRenderer.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_TrailRenderer_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Transform.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Transform_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.U2D.SpriteAtlas.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_U2D_SpriteAtlas_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.AspectRatioFitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_AspectRatioFitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Button.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Button_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.CanvasScaler.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_CanvasScaler_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ContentSizeFitter.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ContentSizeFitter_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Dropdown.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Dropdown_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GraphicRaycaster.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GraphicRaycaster_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.GridLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_GridLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.HorizontalLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_HorizontalLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Image.sprite
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Image_sprite()
		{
			global::UnityEngine.UI.Image target = default(global::UnityEngine.UI.Image);
			global::UnityEngine.Sprite accessor = target.sprite;
			target.sprite = default(global::UnityEngine.Sprite);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Image, UnityEngine.Sprite> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Image, UnityEngine.Sprite>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.UI.Image));
			optimized.SetValue(default(global::UnityEngine.UI.Image), default(global::UnityEngine.Sprite));
		}
		
		// UnityEngine.UI.InputField.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.InputField.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_InputField_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.LayoutElement.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_LayoutElement_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Mask.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Mask_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Outline.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Outline_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.PositionAsUV1.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_PositionAsUV1_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RawImage.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RawImage_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.RectMask2D.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_RectMask2D_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Scrollbar.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Scrollbar_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ScrollRect.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ScrollRect_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Selectable.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Selectable_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Shadow.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Shadow_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.minValue
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_minValue()
		{
			global::UnityEngine.UI.Slider target = default(global::UnityEngine.UI.Slider);
			float accessor = target.minValue;
			target.minValue = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Slider, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Slider, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.UI.Slider));
			optimized.SetValue(default(global::UnityEngine.UI.Slider), default(float));
		}
		
		// UnityEngine.UI.Slider.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.SetValueWithoutNotify
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_SetValueWithoutNotify()
		{
			global::UnityEngine.UI.Slider target = default(global::UnityEngine.UI.Slider);
			float arg0 = default(float);
			target.SetValueWithoutNotify(arg0);
			global::Ludiq.ReflectionInvoker optimized = new global::Ludiq.ReflectionInvoker(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.UI.Slider), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Slider.value
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Slider_value()
		{
			global::UnityEngine.UI.Slider target = default(global::UnityEngine.UI.Slider);
			float accessor = target.value;
			target.value = default(float);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Slider, float> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Slider, float>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.UI.Slider));
			optimized.SetValue(default(global::UnityEngine.UI.Slider), default(float));
		}
		
		// UnityEngine.UI.Text.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Text.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Text_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.isOn
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_isOn()
		{
			global::UnityEngine.UI.Toggle target = default(global::UnityEngine.UI.Toggle);
			bool accessor = target.isOn;
			target.isOn = default(bool);
			global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Toggle, bool> optimized = new global::Ludiq.InstancePropertyAccessor<UnityEngine.UI.Toggle, bool>(default(global::System.Reflection.PropertyInfo));
			optimized.GetValue(default(global::UnityEngine.UI.Toggle));
			optimized.SetValue(default(global::UnityEngine.UI.Toggle), default(bool));
		}
		
		// UnityEngine.UI.Toggle.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.Toggle.SetIsOnWithoutNotify
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_Toggle_SetIsOnWithoutNotify()
		{
			global::UnityEngine.UI.Toggle target = default(global::UnityEngine.UI.Toggle);
			bool arg0 = default(bool);
			target.SetIsOnWithoutNotify(arg0);
			global::Ludiq.InstanceActionInvoker<UnityEngine.UI.Toggle, bool> optimized = new global::Ludiq.InstanceActionInvoker<UnityEngine.UI.Toggle, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(default(global::UnityEngine.UI.Toggle), arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.ToggleGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_ToggleGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.UI.VerticalLayoutGroup.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_UI_VerticalLayoutGroup_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Addition()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Division()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Division_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			float arg1 = default(float);
			UnityEngine.Vector2 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Equality()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Implicit()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector2 conversion = ((UnityEngine.Vector2)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Implicit_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector3 conversion = ((UnityEngine.Vector3)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Inequality()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply_0()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			float arg1 = default(float);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, float, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Multiply_1()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_Subtraction()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::UnityEngine.Vector2 arg1 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector2 @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector2.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector2_op_UnaryNegation()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector2>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Addition()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Division()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			UnityEngine.Vector3 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Equality()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Inequality()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Multiply()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			float arg1 = default(float);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, float, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Multiply_0()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_Subtraction()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::UnityEngine.Vector3 arg1 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector3 @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector3.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector3_op_UnaryNegation()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Addition
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Addition()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 + arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Division
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Division()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			float arg1 = default(float);
			UnityEngine.Vector4 @operator = (arg0 / arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Equality()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit()
		{
			global::UnityEngine.Vector3 arg0 = default(global::UnityEngine.Vector3);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector3, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit_0()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector3 conversion = ((UnityEngine.Vector3)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector3> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector3>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Implicit_1()
		{
			global::UnityEngine.Vector2 arg0 = default(global::UnityEngine.Vector2);
			UnityEngine.Vector4 conversion = ((UnityEngine.Vector4)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector2, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Inequality()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Multiply()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			float arg1 = default(float);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, float, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Multiply
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Multiply_0()
		{
			float arg0 = default(float);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 * arg1);
			global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<float, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_Subtraction
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_Subtraction()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::UnityEngine.Vector4 arg1 = default(global::UnityEngine.Vector4);
			UnityEngine.Vector4 @operator = (arg0 - arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.Vector4.op_UnaryNegation
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_Vector4_op_UnaryNegation()
		{
			global::UnityEngine.Vector4 arg0 = default(global::UnityEngine.Vector4);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Vector4, UnityEngine.Vector4>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Equality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Equality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 == arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Implicit
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Implicit()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			bool conversion = ((bool)(arg0));
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0);
			optimized.Invoke(default(object[]));
		}
		
		// UnityEngine.WebCamTexture.op_Inequality
		[global::UnityEngine.Scripting.PreserveAttribute()]
		public static void UnityEngine_WebCamTexture_op_Inequality()
		{
			global::UnityEngine.Object arg0 = default(global::UnityEngine.Object);
			global::UnityEngine.Object arg1 = default(global::UnityEngine.Object);
			bool @operator = (arg0 != arg1);
			global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool> optimized = new global::Ludiq.StaticFunctionInvoker<UnityEngine.Object, UnityEngine.Object, bool>(default(global::System.Reflection.MethodInfo));
			optimized.Invoke(null, arg0, arg1);
			optimized.Invoke(default(object[]));
		}
	}
}
